#@ # 
#@ # Running icc_shell Version W-2024.09-SP2 for linux64 -- Nov 28, 2024
#@ # Date:   Tue May 13 12:12:32 2025
#@ # Run by: cag383@xunil-03.coe.drexel.edu
#@ 

source -echo -verbose /home/cag383@drexel.edu/ecec575/project/iwls/scripts/icc/i2c_master_top_icc.tcl
#@ # -- Starting source /home/cag383@drexel.edu/ecec575/project/iwls/scripts/icc/i2c_master_top_icc.tcl

#@ # Auto-generated ICC2 script for i2c_master_top
#@ # Configuration: i2c
#@ 
#@ ###########################################################################
#@ ### Initialize
#@ ###########################################################################
#@ ##start_gui
#@ 
#@ set search_path "$search_path /mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/db_ccs
#@ ../src/ "
#@ 
#@ # Library setup
#@ set link_library [ list /mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v125c.db /mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v25c.db /mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95vn40c.db]
#@ set target_library [ list /mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/db_ccs/saed32rvt_ss0p95v25c.db ]
#@ 
#@ set libdir "/mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/tech/star_rcxt"
#@ set tlupmax "$libdir/saed32nm_1p9m_Cmax.tluplus"
#@ set tlunom "$libdir/saed32nm_1p9m_nominal.tluplus"
#@ set tlupmin "$libdir/saed32nm_1p9m_Cmin.tluplus"
#@ set tech2itf "$libdir/saed32nm_tf_itf_tluplus.map"
#@ set_tlu_plus_files -max_tluplus $tlunom -tech2itf_map $tech2itf
#@ set lib_name "i2c_master_top"
#@ set mw_logic0_net VSS
#@ set mw_logic1_net VDD
#@ set design_data ./outputs/i2c/i2c_master_top.ddc
#@ set cell_name "i2c_master_top"
#@ import_designs $design_data -format ddc -top $cell_name
#@ 
#@ create_mw_lib ./outputs/i2c/$lib_name.mw \
#@ 	-technology "/mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/tech/milkyway/saed32nm_1p9m_mw.tf" \
#@ 	-mw_reference_library "/mnt/class_data/ecec574-w2019/PDKs/_archived/SAED32nm_new/SAED32_EDK/lib/stdcell_rvt/milkyway/saed32nm_rvt_1p9m"
#@ 
#@ open_mw_lib ./outputs/i2c/$lib_name.mw
#@ read_verilog ./outputs/i2c/i2c_master_top.v
#@ 
#@ uniquify_fp_mw_cel
#@ link
#@ read_sdc ./outputs/i2c/i2c_master_top.sdc
#@ # -- Starting source /mnt/class_data/ecec574-w2019/tools/synopsys/icc/W-2024.09-SP2/auxx/syn/all_command_option_def.tcl

#@ define_proc_attributes all_physical_only_cells -info "Get the collection of physical only cells" -define_args {
#@ { -coordinates "coordinates of bounding box" "llx lly urx ury" string {optional}} 
#@ { -lib_cells "get cells related to these objects" "objects" list {optional}} 
#@ { -cell_name "list of cell name patterns and collections" "patterns" list {optional}} 
#@ { "" "Existing collection" "arguments" list {optional}} 
#@ }
#@ define_proc_attributes all_physical_only_nets  -info "Get the collection of physical only nets" -define_args {
#@ { "" "list of cell name patterns and collections" "arguments" list {optional}} 
#@ } 
#@ define_proc_attributes all_drc_violated_nets -info "Returns all DRC violated nets" -define_args { 
#@ { -max_capacitance "max Cap DRC violated nets" "" string {optional}} 
#@ { -max_transition "max transition time DRC violated nets" "" string {optional}} 
#@ { -max_fanout "max fanout DRC violated nets" "" string {optional}}
#@ { -threshold "Captures all values more than or equal to threshold" "threshold" string {optional}} 
#@ { -bound "Captures all values less than or equal to bound bound" "upper" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments"  list {optional}} 
#@ }
#@ define_proc_attributes all_fanin -info "return pins or cells in transitive fanin" -define_args { 
#@ { -to "set of sink ports, pins, or nets" "sink_list" list {optional}} 
#@ { -startpoints_only  "return only the timing startpoints" "" string {optional}} 
#@ { -exclude_bboxes "black-boxes are not included in return-set" "" string {optional}} 
#@ { -break_on_bboxes  "traversal stops at black-boxes" "" string {optional}} 
#@ { -only_cells "only cells are included in the return-set" "" string {optional}} 
#@ { -flat "trace entire design instead of just current hierarchy" "" string {optional}} 
#@ { -levels "maximum number of levels of logic to traverse" "n" string {optional}} 
#@ { -trace_arcs "Type of network arcs to trace. Values: timing, all" "arc_type" string {optional}}
#@ }
#@ define_proc_attributes all_high_fanout -info "Returns all high fanout objects" -define_args { 
#@ { -nets "high fanout nets" "" string {optional}} 
#@ { -threshold "high fanout threshold: value>=0" "threshold" string {optional}} 
#@ { -through_buf_inv "treat buffers and inverters as transparent -check for transitive fanout" "" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_ideal_nets -info "Returns all ideal nets" -define_args { 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_inputs -info "return input ports" -define_args { 
#@ { -clock "ports with input delay relative to clock" "clock" string {optional}} 
#@ { -edge_triggered "ports with non-level-sensitive input delay" "" string {optional}} 
#@ { -level_sensitive "ports with level-sensitive input delay" "" string {optional}} 
#@ }
#@ define_proc_attributes all_outputs -info "return output ports" -define_args { 
#@ { -clock "ports with output delay relative to clock" "clock" string {optional}} 
#@ { -edge_triggered "ports with non-level-sensitive output delay" "" string {optional}} 
#@ { -level_sensitive "ports with level-sensitive output delay" "" string {optional}} 
#@ }
#@ define_proc_attributes all_threestate -info "Returns all threestate objects" -define_args { 
#@ { -nets "threestate nets" "" string {optional}} 
#@ { "" "objects patterns OR collection" "arguments" string {optional}} 
#@ }
#@ define_proc_attributes all_dont_touch -info "Returns all dont touch objects" -define_args { 
#@ { -nets "Dont touch nets" "" string {optional}} 
#@ { -cells "Dont touch cells" "" string {optional}} 
#@ { "" "Dont touch patterns OR collections" "patterns" string {optional}} 
#@ }
#@ define_proc_attributes all_size_only_cells -info "Returns all size_only cells" -define_args { 
#@ { "" "Object patterns OD collections" "patterns" string {optional}} 
#@ }
#@ define_proc_attributes all_clocks -info "return all clocks in the current design"  
#@ define_proc_attributes all_designs -info "return all designs" 
#@ define_proc_attributes all_registers  -info "create a collection of register cells or pins" -define_args { 
#@ { -no_hierarchy "only search the top level of hierarchy" "" string {optional}} 
#@ {-rise_clock "return registers triggered by rise edge of this clock" "rise_clock" string {optional}}
#@ {-fall_clock "return registers triggered by rise edge of this clock" "fall_clock" string {optional}}
#@ { -clock "return registers of this clock" "clock" string {optional}} 
#@ { -cells "return cells - this is the default" "" string {optional}} 
#@ { -data_pins "return data_pins" "" string {optional}} 
#@ { -clock_pins "return clock_pins" "" string {optional}} 
#@ { -slave_clock_pins "return slave_clock_pin" "" string {optional}} 
#@ { -inverted_output "return FF's with inverted output phase" "" string {optional}} 
#@ { -output_pins "return output_pins" "" string {optional}} 
#@ { -level_sensitive "only consider level sensitive registers" "" string {optional}} 
#@ { -edge_triggered "only consider edge triggered register" "" string {optional}} 
#@ { -master_slave "only consider master/slave registers" "" string {optional}} 
#@ }
#@ define_proc_attributes all_critical_cells -info "return critical cells" -define_args { 
#@ { -slack_range "critical range to select cells:value>=0" "range_value" string {optional}} 
#@ }
#@ define_proc_attributes all_critical_pins -info "return critical pins" -define_args { 
#@ { -slack_range "critical range to select cells:value>=0" "range_value" string {optional}} 
#@ { -type "pintype: Values: endpoint, startpoint" "pin_type" string {optional}} 
#@ }
#@ define_proc_attributes get_magnet_cells -info "return magnet cells collection" -define_args {
#@ { -stop_by_sequential_cells "don't pull sequential cells" "" string {optional}} 
#@ { -exclude_buffers "skip through buffers in levels" "" string {optional}} 
#@ { -exclude_cells "list of excluded cells list" "" string {optional}}
#@ { -logical_level "number of logical levels to pull for placement" "integer" string {optional}} 
#@ { -stop_points "list of stop points where to stop magnetizing paths" "object_list" list {optional}} 
#@ { "" "a list of magnet objects" "magnet_objects" list {optional}} 
#@ }
#@ define_proc_attributes all_fanout -info "return pins or cells in transitive fanout" -define_args {
#@ {-clock_tree "return all clock tree components in design" "" string {optional}}
#@ {-from "set of source ports, pins, or nets" "source_list" list {optional}}
#@ {-endpoints_only "return only the timing endpoints" "" string {optional}}
#@ {-exclude_bboxes "black-boxes are not included in return-set" "" string {optional}}
#@ {-break_on_bboxes "traversal stops at black-boxes" "" string {optional}}
#@ {-only_cells "only cells are included in the return-set" "" string {optional}}
#@ {-flat "trace entire design instead of just current hierarchy" "" string {optional}}
#@ {-levels "maximum number of levels of logic to traverse" "n" string {optional}}
#@ {-trace_arcs "Type of network arcs to trace. Values: timing, all" "arc_type" string {optional}}
#@ }
#@ define_proc_attributes all_physical_only_ports -info " Get the collection of physical only ports" -define_args {
#@ {"" "list of cell name patterns and collections" "arguments" list {optional}}
#@ }
#@ define_proc_attributes get_matching_nets_for_pattern -info "Get matched nets for a certain net pattern" -define_args { 
#@ { -pattern "pattern id" "integer" string {optional}} 
#@ { -optimizable "Return all nets that can be optimized" "" string {optional}} 
#@ { -transition_lower_limit "nets with transition equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -transition_upper_limit "nets with transition less than upper limit" "upper_limit" string {optional}} 
#@ { -setup_slack_lower_limit "nets with slack equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -setup_slack_upper_limit "nets with slack less than upper limit" "upper_limit" string {optional}} 
#@ { -hold_slack_lower_limit "nets with hold slack equal or greater than lower limit" "lower_limit" string {optional}} 
#@ { -hold_slack_upper_limit "nets with hold slack less than upper limit" "upper_limit" string {optional}} 
#@ }
#@ # -- End source /mnt/class_data/ecec574-w2019/tools/synopsys/icc/W-2024.09-SP2/auxx/syn/all_command_option_def.tcl

#@ 
#@ ############################################################################
#@ #### Floorplanning
#@ ############################################################################
#@ create_floorplan -core_utilization 0.7 -left_io2core 10 -bottom_io2core 10 -right_io2core 10 -top_io2core 10 -core_aspect_ratio 1.0
#@ derive_pg_connection -power_net VDD -ground_net VSS -tie
#@ 
#@ ##Create VSS ring
#@ create_rectangular_rings  -nets  {VSS}  -left_offset 0.5  -left_segment_layer M6 -left_segment_width 1.0 -extend_ll -extend_lh -right_offset 0.5 -right_segment_layer M6 -right_segment_width 1.0 -extend_rl -extend_rh -bottom_offset 0.5  -bottom_segment_layer  M7 -bottom_segment_width 1.0 -extend_bl -extend_bh -top_offset 0.5 -top_segment_layer M7 -top_segment_width 1.0 -extend_tl -extend_th
#@ 
#@ ## Create VDD Ring
#@ create_rectangular_rings  -nets  {VDD}  -left_offset 1.8  -left_segment_layer M6 -left_segment_width 1.0 -extend_ll -extend_lh -right_offset 1.8 -right_segment_layer M6 -right_segment_width 1.0 -extend_rl -extend_rh -bottom_offset 1.8  -bottom_segment_layer M7 -bottom_segment_width 1.0 -extend_bl -extend_bh -top_offset 1.8 -top_segment_layer M7 -top_segment_width 1.0 -extend_tl -extend_th
#@ 
#@ ## Creates Power Strap
#@ create_power_strap -nets { VDD } -layer M6 -direction vertical -width 3
#@ create_power_strap -nets { VSS } -layer M6 -direction vertical  -width 3
#@ create_fp_placement -effort high -timing_driven
#@ insert_stdcell_filler
#@ preroute_standard_cells -mode net -nets VDD -v_layer M6
#@ preroute_standard_cells -mode net -nets VSS -v_layer M6
#@ 
#@ ###########################################################################
#@ ### Placement
#@ ###########################################################################
#@ place_opt 
#@ ##-power -congestion
#@ set_fix_hold [all_clocks]
#@ clock_opt ##
#@ -only_cts -no_clock_route
#@ #clock_opt -only_psyn -area_recovery -no_clock_route
#@ route_zrt_group -all_clock_nets -reuse_existing_global_route true
#@ route_opt 
#@ ###-initial_route_only
#@ ###create_qor_snapshot
#@ ###route_opt -skip_initial_route -power
#@ 
#@ extract_rc  -coupling_cap -incremental
#@ write_parasitics -output ./outputs/i2c_master_top_extracted.spef -format SPEF
#@ write_sdf ./outputs/i2c_master_top_extracted.sdf
#@ write_sdc ./outputs/i2c_master_top_extracted.sdc
#@ write_verilog ./outputs/i2c_master_top_extracted.v
#@ 
#@ report_constraints -all > ./reports/i2c/icc_i2c_master_top_constraints.rpt
#@ report_area > ./reports/i2c/icc_i2c_master_top_area.rpt
#@ report_power > ./reports/i2c/icc_i2c_master_top_power.rpt
#@ report_qor  > ./reports/i2c/icc_i2c_master_top_qor.rpt
#@ report_cell > ./reports/i2c/icc_i2c_master_top_cells.rpt
#@ report_resources > ./reports/i2c/icc_i2c_master_top_resources.rpt
#@ report_timing -max_paths 10 > ./reports/i2c/icc_i2c_master_top_timing.rpt
#@ 
#@ save_mw_cel -as i2c_master_top_extracted
#@ quit
